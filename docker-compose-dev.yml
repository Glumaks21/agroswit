version: "3.9"

services:
  config-server:
    container_name: config-server
    build:
      context: ./config-server
    restart: unless-stopped
    healthcheck:
      test: curl --fail http://localhost:8888/management || exit 1
      interval: 10s
      timeout: 2s
      retries: 5
    networks:
      - cloud-network

  discovery-server:
    container_name: discovery-server
    build:
      context: ./discovery-server
    restart: unless-stopped
    healthcheck:
      test: curl --fail http://localhost:7777/eureka/apps || exit 1
      interval: 10s
      timeout: 2s
      retries: 5
    depends_on:
      config-server:
        condition: service_healthy
    ports:
      - '7777:7777'
    networks:
      - cloud-network

  gateway-server:
    container_name: gateway-server
    build:
      context: ./api-gateway
    restart: unless-stopped
    healthcheck:
      test: curl --fail http://localhost:8080/management || exit 1
      interval: 10s
      timeout: 2s
      retries: 5
    depends_on:
      discovery-server:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - cloud-network

  catalog-service:
    container_name: catalog-service
    build:
      context: ./catalog-service
    restart: unless-stopped
    environment:
      - DB_URL=jdbc:mysql://db:3306/${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - MINIO_URL=http://${HOST_IP}:9000
      - MINIO_BUCKET=${PRODUCT_SERVICE_MINIO_BUCKET}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
    depends_on:
      gateway-server:
        condition: service_healthy
    networks:
      - cloud-network

  inventory-service:
    container_name: inventory-service
    build:
      context: ./inventory-service
    restart: unless-stopped
    environment:
      - DB_URL=r2dbc:mysql://db:3306/${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
    depends_on:
      gateway-server:
        condition: service_healthy
    networks:
      - cloud-network

  redis:
    image: redis:7.2.4-alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    command: redis-server --save 60 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    networks:
      - cloud-network
    volumes:
      - cache:/data

  minio:
    image: minio/minio:RELEASE.2024-04-06T05-26-02Z.fips
    restart: unless-stopped
    ports:
      - '9090:9090'
      - '9000:9000'
    command: server ~/minio --console-address :9090
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY}
    networks:
      - cloud-network
    volumes:
      - minio_data:/data

  db:
    container_name: db
    image: mysql:8.3
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    networks:
      - cloud-network
    volumes:
      - db_data:/var/lib/mysql

networks:
  cloud-network:
    driver: bridge

volumes:
  db_data:
    driver: local
  minio_data:
    driver: local
  cache:
    driver: local